# Server Port
server.port=8080

# Local JSON File Path (relative to src/main/resources)
app.json.file.path=data/internal-425-Test-1-US.json

# Enable Spring Retry
spring.retry.enabled=true

## AWS CONFIG
aws.region=us-east-1
#aws.bedrock.modelId=arn:aws:bedrock:us-east-1:152914900543:inference-profile/us.anthropic.claude-opus-4-20250514-v1:0
aws.bedrock.modelId=anthropic.claude-3-5-sonnet-20240620-v1:0
aws.bedrock.embeddingModelId=amazon.titan-embed-text-v2:0
app.bedrock.processing.delayMs=15000
app.s3.bucket-name=darshans3bucket-1
app.s3.region=us-east-2
app.embedding.model=sentence-transformers/all-MiniLM-L6-v2
#spring.graphql.path=/graphql
#spring.graphql.graphiql.enabled=true
#spring.graphql.graphiql.path=/graphiql
#spring.graphql.graphiql.cdn.enabled=true


# Logging Level (optional, for debugging)
logging.level.com.apple.springboot=DEBUG
logging.level.org.springframework.retry=DEBUG

# PostgreSQL Database Configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/bedrock_enriched_content_db
#spring.datasource.username=postgres
#spring.datasource.password=admin
#spring.datasource.driver-class-name=org.postgresql.Driver


#spring.datasource.url=jdbc:postgresql://localhost:5433/bedrock_enriched_content_db
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5433/bedrock_enriched_content_db?tcpKeepAlive=true&ApplicationName=multisource
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=yugabyte
spring.datasource.password=yugabyte
spring.batch.jdbc.platform=postgres
spring.batch.jdbc.initialize-schema=NEVER
# The YugabyteDB smart driver is recommended. It's aware of the cluster topology.


# JPA/Hibernate Configuration
# 'update' can automatically create/update schema based on entities. Good for dev, use 'validate' or 'none' in prod.
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.type.json_mapper=com.fasterxml.jackson.databind.ObjectMapper


# Thread pool size for enrichment
enrichment.thread-pool.size=1

# --- Hikari: keep connections fresh ---
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.max-lifetime=1500000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.keepalive-time=300000
spring.datasource.hikari.connection-timeout=30000


# --- JPA: short, efficient transactions ---
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC


# Resilience4j Retry (handles 429s & RequestNotPermitted)
resilience4j.retry.instances.bedrockRetry.maxAttempts=1
resilience4j.retry.instances.bedrockRetry.waitDuration=2s
resilience4j.retry.instances.bedrockRetry.enableExponentialBackoff=true
resilience4j.retry.instances.bedrockRetry.exponentialBackoffMultiplier=2
resilience4j.retry.instances.bedrockRetry.retryExceptions=software.amazon.awssdk.services.bedrockruntime.model.ThrottlingException,io.github.resilience4j.ratelimiter.RequestNotPermitted,software.amazon.awssdk.core.exception.SdkClientException
resilience4j.retry.instances.bedrockRetry.failAfterMaxAttempts=true

resilience4j.retry.instances.bedrockRetry.enableRandomizedWait=true
resilience4j.retry.instances.bedrockRetry.randomizedWaitFactor=0.5


# Optional: Bulkhead to hard-cap concurrent Bedrock calls
resilience4j.bulkhead.instances.bedrockBulkhead.maxConcurrentCalls=2
resilience4j.bulkhead.instances.bedrockBulkhead.maxWaitDuration=10s

# Enrichment Executor Configuration
enrichment.executor.core-pool-size=5
enrichment.executor.max-pool-size=10
enrichment.executor.queue-capacity=25

# Rate limiting for embeddings
resilience4j.ratelimiter.instances.bedrockEmbedder.limitForPeriod=2
resilience4j.ratelimiter.instances.bedrockEmbedder.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.bedrockEmbedder.timeoutDuration=5s

# Retry for transient throttling
resilience4j.retry.instances.bedrockEmbedder.maxAttempts=4
resilience4j.retry.instances.bedrockEmbedder.waitDuration=500ms
resilience4j.retry.instances.bedrockEmbedder.retryExceptions=software.amazon.awssdk.services.bedrockruntime.model.ThrottlingException,software.amazon.awssdk.services.bedrockruntime.model.ServiceQuotaExceededException,software.amazon.awssdk.core.exception.SdkClientException
resilience4j.retry.instances.bedrockEmbedder.exponentialBackoffMultiplier=2