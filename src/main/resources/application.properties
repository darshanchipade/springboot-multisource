# Server Port
server.port=8080

# Local JSON File Path (relative to src/main/resources)
app.json.file.path=data/internal-425-Test-1-US.json

# Enable Spring Retry
spring.retry.enabled=true

## AWS CONFIG
aws.region=us-east-1
aws.bedrock.modelId=anthropic.claude-3-5-sonnet-20240620-v1:0
aws.bedrock.embeddingModelId=amazon.titan-embed-text-v2:0
app.bedrock.processing.delayMs=15000
app.s3.bucket-name=darshans3bucket-1
app.s3.region=us-east-2
app.embedding.model=sentence-transformers/all-MiniLM-L6-v2

# Logging Level
logging.level.com.apple.springboot=DEBUG
logging.level.org.springframework.retry=DEBUG

# PostgreSQL Database Configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/bedrock_enriched_content_db
#spring.datasource.username=postgres
#spring.datasource.password=admin
#spring.datasource.driver-class-name=org.postgresql.Driver


#spring.datasource.url=jdbc:postgresql://localhost:5433/bedrock_enriched_content_db
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5433/bedrock_enriched_content_db?tcpKeepAlive=true&ApplicationName=multisource
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=yugabyte
spring.datasource.password=yugabyte
spring.batch.jdbc.platform=postgres
spring.batch.jdbc.initialize-schema=NEVER

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.type.json_mapper=com.fasterxml.jackson.databind.ObjectMapper

# Hikari Connection Pool
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.max-lifetime=1500000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.keepalive-time=300000
spring.datasource.hikari.connection-timeout=30000

# JPA Transaction Optimizations
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Enrichment Executor Configuration
enrichment.executor.core-pool-size=2
enrichment.executor.max-pool-size=4
enrichment.executor.queue-capacity=1000
enrichment.batch.size=10

# Resilience4j Rate Limiters
# For Claude 3.5 Sonnet enrichment (assuming ~50 RPM default in us-east-1 for new accounts)
resilience4j.ratelimiter.instances.bedrock.limitForPeriod=20
resilience4j.ratelimiter.instances.bedrock.limitRefreshPeriod=1m
resilience4j.ratelimiter.instances.bedrock.timeoutDuration=15s

# For batch enrichment pipeline
resilience4j.ratelimiter.instances.bedrockEnricherRateLimiter.limitForPeriod=20
resilience4j.ratelimiter.instances.bedrockEnricherRateLimiter.limitRefreshPeriod=60s
resilience4j.ratelimiter.instances.bedrockEnricherRateLimiter.timeoutDuration=15s

# For Titan Text Embeddings v2 (assuming ~800 RPM default in us-east-1)
resilience4j.ratelimiter.instances.bedrockEmbedder.limitForPeriod=600
resilience4j.ratelimiter.instances.bedrockEmbedder.limitRefreshPeriod=60s
resilience4j.ratelimiter.instances.bedrockEmbedder.timeoutDuration=15s

# Resilience4j Retry Configurations
# For Claude 3.5 Sonnet enrichment
resilience4j.retry.instances.bedrockRetry.maxAttempts=10
resilience4j.retry.instances.bedrockRetry.waitDuration=1000ms
resilience4j.retry.instances.bedrockRetry.enableExponentialBackoff=true
resilience4j.retry.instances.bedrockRetry.exponentialBackoffMultiplier=2
resilience4j.retry.instances.bedrockRetry.maxDuration=60s
resilience4j.retry.instances.bedrockRetry.retryExceptions=software.amazon.awssdk.services.bedrockruntime.model.ThrottlingException,io.github.resilience4j.ratelimiter.RequestNotPermitted,software.amazon.awssdk.core.exception.SdkClientException
resilience4j.retry.instances.bedrockRetry.enableRandomizedWait=true
resilience4j.retry.instances.bedrockRetry.randomizedWaitFactor=0.5

# For Titan Text Embeddings
resilience4j.retry.instances.bedrockEmbedder.maxAttempts=8
resilience4j.retry.instances.bedrockEmbedder.waitDuration=1000ms
resilience4j.retry.instances.bedrockEmbedder.enableExponentialBackoff=true
resilience4j.retry.instances.bedrockEmbedder.exponentialBackoffMultiplier=2
resilience4j.retry.instances.bedrockEmbedder.maxDuration=60s
resilience4j.retry.instances.bedrockEmbedder.retryExceptions=software.amazon.awssdk.services.bedrockruntime.model.ThrottlingException,software.amazon.awssdk.services.bedrockruntime.model.ServiceQuotaExceededException,software.amazon.awssdk.core.exception.SdkClientException
resilience4j.retry.instances.bedrockEmbedder.enableRandomizedWait=true
resilience4j.retry.instances.bedrockEmbedder.randomizedWaitFactor=0.5

# Resilience4j Bulkhead
resilience4j.bulkhead.instances.bedrockBulkhead.maxConcurrentCalls=2
resilience4j.bulkhead.instances.bedrockBulkhead.maxWaitDuration=15s


# SQS Configuration
# SQS Configuration
sqs.queue.name=bedrock-enrichment-queue
# Optional: Use for local testing with LocalStack/ElasticMQ
# sqs.endpoint.override=http://localhost:4566